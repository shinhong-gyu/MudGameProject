#include "GameOverLevel.h"
#include "Game/Game.h"
#include <thread>
#include <chrono>

GameOverLevel::GameOverLevel()
{
	menuItems.push_back(new EndMenuItem("예", []() { Game::Get().InitGame(); }));
	menuItems.push_back(new EndMenuItem("아니오", []() { Game::Get().QuitGame(); }));

	length = (int)menuItems.size();
	timer->bActive = false;


	vector<wstring> frame;

	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⢀⢠⢄⢖⢔⡕⡵⡱⡕⡲⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⡠⡔⡔⡤⡠⡀⡠⡜⣜⢼⢸⢜⢕⢕⡕⣕⢝⣜⢭⢢⢢⢤⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⡪⣪⢪⡪⡎⡮⡪⡎⡮⡺⡸⡜⣜⢜⢼⡸⡪⡺⡸⡱⡪⡪⡎⡮⡪⡮⡲⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⡔⣕⢝⢜⢜⢜⡜⣜⢼⡸⡜⡼⡪⣚⢮⡹⡸⡸⡪⡣⡫⡪⡞⣎⠮⠃⢓⣁⠁⠁⠡⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⡎⡮⡪⣪⡣⡳⡹⡸⣸⢸⢜⢎⠞⠜⠜⠜⠕⡝⣜⢎⢏⠎⠊⠀⢀⣾⣹⣿⢷⡀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⣕⢕⢝⢆⢗⢝⠜⠁⠁⠁⠀⣀⣤⣶⣶⡄⠀⠨⠁⠁⠀⠀⠀⠀⢸⣿⣿⣷⢾⢳⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⡠⡢⡔⡄⠀⠀⡔⣇⢗⢕⢇⢧⢁⠀⠀⠀⠠⣾⣧⣽⣿⣟⣿⡄⣆⢄⣀⢀⢀⣀⢠⢟⢏⡏⡮⡪⡧⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠨⡎⡗⣝⠄⢀⢜⢜⢜⡜⡜⣎⢮⢪⡪⡲⡢⡢⡻⡻⡺⡻⡹⡱⡕⣕⢕⢕⢕⣳⢸⢜⢎⢗⢝⢜⡕⠕⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠘⡜⡎⣎⢎⠎⡮⡪⡣⡣⡫⡲⡱⣱⢱⢕⢵⡹⡜⡎⡧⡳⡹⡜⡞⡜⡎⣏⢕⣵⣷⡷⣳⢹⢜⠑⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⢀⣗⣗⢷⢵⠨⡪⡪⡣⡫⣪⢺⢸⢜⢜⢼⢸⢸⡸⡪⡺⡸⣚⢎⢝⣜⣵⣵⣿⢿⢫⡪⡎⡮⠂⠀⠀⠀⠀⠀⠀⠀⡀⢀⢀⢀⠀⠀⠀⡀");
	frame.push_back(L"⢸⡺⡮⣯⡓⠨⡪⡣⡫⣪⢪⢎⢮⢪⢣⢳⢱⢣⢳⡹⡸⡱⡣⡫⡭⡭⡝⡼⡪⡎⡇⣇⢧⣃⣀⣀⡠⡤⣤⣲⣪⢯⢾⢝⣗⢯⣻⡳⡪⣪");
	frame.push_back(L"⢳⣫⢟⡮⡇⠨⡺⡸⡱⡱⡕⣕⢵⢱⡹⡸⡪⡪⡎⡮⡹⡸⡹⡸⡪⡪⡪⡎⡮⣪⢺⢪⣗⣗⢷⢽⣝⡽⣺⣺⣪⢯⢯⢯⢞⡽⡮⡳⣩⢪");
	frame.push_back(L"⠘⣮⣻⡺⣽⡀⢕⢝⢜⢕⢕⡕⣕⢕⡕⡵⡹⡸⡜⡜⡎⡇⡏⡎⡞⡜⣕⡕⣇⢧⣳⣻⡺⣪⢯⣳⡳⣝⣗⢗⠽⠝⠝⠹⠹⠽⠅⠀⠀⠁");
	frame.push_back(L"⠀⢗⡷⡽⣺⣺⣪⡕⡝⡜⡕⣕⢕⢕⡕⡵⡱⡣⡳⡹⡸⡜⡎⡗⡝⡎⣮⣪⢞⣵⣳⡳⡽⡽⣝⡮⡯⣗⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠸⣝⡽⣵⣳⡳⡽⣮⣳⢹⢜⢼⢱⢓⡕⡗⡝⡜⣕⢝⣜⢮⡺⡮⣻⣺⣪⢟⣞⢮⢯⢯⣻⣪⢯⢯⣞⣞⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");

	frames.push_back(frame);

	frame = vector<wstring>();

	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀ ⠀⠀⠀⠀⣀⠤⡔⡲⡸⡪⡣⡣⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⢄⢖⢔⢆⢄⣀⢔⢝⢜⢜⢎⢇⢗⢕⢵⡹⡸⡔⡆⡖⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⡠⡪⡣⡣⡫⡪⡣⡳⡱⡱⡕⢧⢳⢱⡣⡗⡵⡹⡱⡱⡹⡸⡜⡮⡲⡱⣲⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⢐⢕⡕⡵⡹⡸⣱⡹⣸⢪⢣⢻⢸⢕⢇⡇⣇⢧⢳⡱⡝⡎⠧⠓⣁⣥⣄⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⢪⢣⢣⡣⡏⡞⣜⢜⢜⠜⠕⠑⠓⠑⠁⠙⠪⡪⡪⠎⠊⠀⠀⣴⣯⣿⠻⣆⣠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⡰⡕⣕⢕⢵⠱⠁⠁⠀⠀⣤⠶⣿⣿⣧⡀⠈⠀⠀⠀⠀⠀⢀⣿⣿⢿⢻⢳⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠠⡜⣝⢎⠀⠀⡔⡽⡸⡸⡜⡕⡤⡄⣀⠀⠸⣿⣟⣿⡷⢿⢣⡺⡔⡤⢤⢄⢖⡢⣇⢧⠳⡝⣜⠲⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⢨⢪⢎⢮⢠⢢⡣⣣⢳⢱⢕⢝⢜⡜⡜⡭⡣⡣⡇⣇⢯⢪⡣⡇⡇⡯⡪⣺⣸⣱⡪⡎⣓⠧⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⣇⢧⣣⡋⢔⢕⡕⣕⢵⢱⢕⢇⢇⢏⢎⡎⣏⢮⢎⢮⢪⢮⢚⢎⣧⣷⣿⢟⢵⢱⡹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⢸⣺⢽⣺⡊⢸⢱⢱⡱⡱⡱⡕⣕⢝⢜⢕⢕⢇⢇⠧⠧⡇⡗⣟⢻⡫⣫⢣⢳⢱⠕⠁⠀⠀⢀⢀⣀⢤⢴⣲⡲⣲⡲⡦⡄⣆⢇⢅⢄⡀");
	frame.push_back(L"⢵⣫⢗⡷⡀⢕⢇⢧⢣⢫⡪⣪⢪⡪⡣⡳⡱⡹⡪⡫⡣⡫⡎⡎⡇⣇⢇⢗⢕⢗⣟⣽⣫⢯⢯⢯⢾⢝⣗⢷⢝⡷⡽⡽⡱⡱⡱⡵⡒⠤");
	frame.push_back(L"⠸⣺⢽⣺⣅⠸⡸⡜⡪⡕⡕⣕⢕⡕⡵⡹⡸⡪⣪⢺⢸⢱⡱⡹⣸⡸⡜⣕⡽⣝⣞⣞⢮⢯⢯⣫⢯⢯⢞⠽⢝⢾⢝⠁⠉⠘⠑⠕⠭⠁");
	frame.push_back(L"⠈⡾⣝⣞⢮⢧⡱⡕⡝⡜⡎⣎⢎⡎⡮⡪⡺⡸⡜⣜⢎⢇⢗⢝⢜⡼⣼⡺⣝⣞⣞⢮⢯⢯⣳⣅⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠸⣳⢽⢝⣗⣟⢾⢜⢮⢪⢎⢮⢪⢎⢞⢵⢹⡸⣜⡪⣧⣳⣫⢯⢾⢵⣫⢗⣗⡽⡽⡽⡵⣳⣳⢅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠫⡯⡯⣞⡮⡯⡯⡯⣳⣳⣳⣳⡳⡯⣞⢷⢽⣪⢟⣞⢮⣞⡽⡽⣵⣫⢯⣞⡽⣝⢾⣝⣗⡽⡵⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");

	frames.push_back(frame);

	frame = vector<wstring>();

	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣀⢀⠀⠀⠀⠀⢀⢠⢠⢄⢆⢦⢢⡢⡄⡄ ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢔⢜⢕⢵⢱⢕⢝⢦⢰⡸⡜⡕⡕⡇⡗⣕⢕⢕⡕⡵⡄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡱⡹⡸⡱⡕⡵⡱⡕⡵⡱⡱⣣⢫⡪⡺⡼⡸⡪⣣⢫⢪⡪⡲⡱⡢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡕⡕⣝⢜⣕⢳⢱⢣⢫⡪⡫⡝⡜⣕⢕⢇⢧⢳⢹⡸⣸⢱⢕⡝⠜⠝⠼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢇⢏⢎⢎⢎⠎⠃⠃⠁⠁⢉⣈⣉⠈⠈⠳⣱⢕⠇⠇⠃⠁⢠⣲⣶⣦⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⡀⡮⡲⡁⠀⠀⠀⠀⡔⣝⢜⢕⢝⠮⡄⡀⠀⠀⢰⣾⣙⣿⡿⣷⠀⠐⠀⠀⠀⠀⠀⢠⣿⣿⣯⣽⢆⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⢸⢪⢺⢡⢠⠢⠀⢰⢱⢱⡱⡹⡸⡱⣱⢹⢔⢖⢜⢿⠯⡿⡻⡻⡱⣓⠦⢤⢠⢠⢄⢞⣻⡹⡹⣜⣊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⢈⢮⣪⣣⡁⠀⠀⡎⣎⢇⢇⢏⢮⢺⢸⡸⡜⣜⠮⡎⡧⡳⣹⡸⡕⣕⢝⢼⢪⡚⡎⡗⣪⢪⣣⠳⠘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⢸⣝⣞⢾⡀⠀⢐⢕⡕⣕⢝⢜⢼⢸⢜⢜⢜⢜⡺⡸⡪⡺⡲⡱⡳⣱⣹⣼⣾⡿⡻⡹⡜⠊⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠤⠀⠀⠀");
	frame.push_back(L"⣺⡺⡮⡷⡀⠀⢘⢜⢜⡜⣜⢕⢵⢱⢕⢝⢜⢕⢵⡹⡸⡪⣚⢎⢟⡝⡟⣝⠵⡕⣝⢜⠌⠀⠀⠀⢀⡠⣔⣖⣞⢮⢯⡻⡆⡗⡝⡜⡝⣂");
	frame.push_back(L"⢐⢯⢯⢯⢆⠀⠈⡎⡇⣇⢇⢧⢳⢱⢕⢝⢜⢕⡕⣕⢝⢎⢇⢏⢎⢮⢺⢸⢱⡹⣬⢤⡤⣴⡲⡯⣻⡺⣵⡳⡽⡽⡽⡽⠱⠕⡝⡼⡜⡔");
	frame.push_back(L"⠀⢯⢯⢯⣫⢧⢄⠱⡹⡸⡸⡜⣜⢼⢸⢪⢣⡣⣣⢣⡣⡳⡱⡣⣫⡪⢮⢪⣣⢯⣞⣗⢟⡮⡯⣫⣗⢯⡳⠽⠝⠝⠺⠁⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠘⡽⣵⣫⢯⢯⣳⡺⣎⢇⢧⢣⠧⢧⡳⢵⢕⢕⡕⡗⡝⡜⡭⣲⡹⣜⢷⣝⣗⣵⡳⡯⣫⢯⠳⠃⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠙⣞⡮⣯⣳⣳⣝⣗⢯⣗⢷⢽⣕⢷⣕⡧⣗⣵⣳⡳⡯⣻⢮⢯⢯⣳⡳⣵⡳⡽⡽⡽⡽⣕⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠘⢺⢵⣳⡳⣵⡫⣗⣗⢯⢗⣗⢯⣞⢾⢵⣳⡳⡽⣝⢷⣝⣗⢯⣞⡽⡮⡯⡯⣻⡺⣝⣞⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");

	frames.push_back(frame);

	frame = vector<wstring>();

	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢠⡠⠤⠤⡄⡄⡀⠀⠀⢀⡀⡄⣄⢤⢠⢠⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀ ⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢸⢜⢎⢮⢹⡩⡎⡮⡪⡢⡎⣇⠧⡳⡱⡱⡕⡇⡗⡝⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡮⡪⡪⡎⣎⢎⣎⢮⣪⢺⡸⡪⡎⣞⢜⢎⠮⢮⠮⢮⢚⢖⡲⡢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⡪⣎⢳⢹⢸⢱⢱⢕⢎⢎⢮⢪⢺⢜⢎⢇⢏⢇⢏⢎⣇⡇⣇⢧⢫⡢⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⡤⡢⠄⠀⠀⠀⠀⠀⢀⢜⢎⢎⢎⢮⠊⠃⠁⠀⠀⢀⣀⣄⣅⡁⠁⠓⣕⢧⢳⢹⠱⠊⠊⣊⣈⡈⠈⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⢪⢺⢪⡃⡀⡄⠀⠀⢀⢇⢗⢝⢜⢕⢵⢹⢤⣀⢀⢰⣿⣬⣿⡿⣿⡀⠠⠀⠁⠀⠀⠀⠀⣼⣷⡿⢿⡀⡀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠘⣜⢜⡜⠜⠀⠀⠀⡜⡜⡎⡮⡪⡣⣣⢣⡣⡎⣎⢎⢟⢳⢻⢻⢛⢦⠳⡤⣀⣀⡀⣀⢾⢿⢿⢟⢟⠲⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠠⣯⣻⣺⡃⠀⠀⢐⢕⢝⢜⡜⡎⡇⣇⢇⡇⡧⡣⣓⢗⢕⢇⡏⡧⡳⡹⡸⡢⡣⡞⡼⡜⡮⠮⡮⡳⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⢸⡺⡮⣞⠆⠀⠀⡸⣸⢱⢕⢕⡕⡝⡜⣜⢜⢜⢎⢇⢗⢭⢣⢣⢳⢱⣹⣜⣵⣿⡾⣞⣚⢎⠗⠕⠁⠁⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀");
	frame.push_back(L"⠐⡽⡽⣺⣣⠀⠀⢜⢜⡜⣜⢕⢕⢝⢜⡜⣜⢕⢝⢎⢞⡜⡭⣹⢹⡹⣛⡻⡫⡣⡇⣇⠎⠂⠀⠀⠀⠀⣀⡤⣤⣲⢴⣢⡆⣜⢜⡔⢔⠄");
	frame.push_back(L"⠀⢸⣝⢷⢽⢵⣄⠘⣜⢜⡜⡜⡕⡝⣜⢜⡜⡜⡎⡎⡇⣇⢏⢎⢎⢮⢪⡪⡎⣇⢧⣃⢄⣠⢤⡲⡮⣯⣳⡻⣺⢮⣻⣪⢇⢇⡇⣗⡕⡍");
	frame.push_back(L"⠀⠀⢳⣫⢯⣳⢽⣝⣖⣇⢧⢫⣪⡺⣸⢸⡸⡪⡪⣣⢫⢪⣪⣪⡣⠧⡇⡗⣝⡼⣳⢽⣝⢾⢽⢝⣽⡺⣺⡺⣳⡫⡞⡎⠀⠀⠈⠀⠁⠁");
	frame.push_back(L"⠀⠀⠀⢫⢷⣝⢗⣗⣗⡽⣵⣳⣲⢕⣕⣕⣝⢜⢭⢪⡪⣣⣪⣲⣩⢧⣟⢾⢵⢯⢯⣳⢽⢝⡽⣝⠞⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠑⢯⢯⢞⣞⣞⣵⣳⣳⣫⢗⡷⡽⡽⡽⡵⡯⣳⣳⡳⡽⡵⣳⣫⢯⡳⡯⣞⡽⡽⣕⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠈⢫⢯⣞⣞⢮⣞⢞⣮⣻⡺⡽⣝⢾⢽⢝⣗⣗⡽⡽⣝⣗⡽⡵⣯⡻⡮⡯⡯⣞⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");

	frames.push_back(frame);

	frame = vector<wstring>();

	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⡠⠤⡤⠤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢪⢪⢎⢏⢎⢇⢇⢎⠮⡤⡰⡰⡪⡣⡳⡱⡲⡰⡄⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⡮⡪⡎⣎⣇⢗⡝⡜⣕⢕⢽⢸⢪⢺⢸⢪⡪⡎⡞⣜⢅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⢀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⡀⣜⢜⢜⢎⢞⢜⢜⡜⣜⢕⢵⢹⡸⡕⣇⢏⢎⢇⢇⢗⢝⢜⡜⡔⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⢰⢕⣝⠄⠀⠀⠀⠀⠀⠀⢀⢜⢜⢎⢎⢇⢗⡁⠉⠀⠀⠀⢀⣁⣁⠑⠑⠕⡵⡹⣸⢱⢕⢵⢕⢵⢹⡸⡜⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⢸⢱⢪⢕⠜⠁⠀⠀⠀⠀⡎⡎⣇⢗⢝⢜⢕⢕⢆⢄⠀⣾⣯⣽⣿⣿⡆⠀⠘⠚⠘⠊⠑⠁⢁⣡⣥⣈⠈⠨⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⣧⣳⢵⡂⠀⠀⠀⠀⡜⡜⡎⣎⢮⢪⢎⢇⢏⢎⢇⢏⢏⢗⢟⢟⢞⢇⢦⣀⠀⠀⠀⠀⢠⣾⣷⡿⣻⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠨⣞⣮⣻⡂⠀⠀⠀⢰⢱⡹⡸⡜⡜⣜⢜⢎⢇⢏⢭⢣⣫⢪⡣⡳⡭⡣⡳⡸⡸⡔⡲⡰⡻⡻⡻⣻⡹⠩⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠈⣗⣗⣵⡣⠀⠀⠀⢜⢜⡜⡜⡎⡮⡪⡎⡞⡜⡕⣝⢜⣜⢜⢎⢗⢕⢝⢮⢹⣱⣝⣭⡣⣫⢪⢳⢱⡪⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⢸⣺⣺⡺⣦⡀⠀⢸⢱⢱⢹⡸⡜⡼⡸⡪⡺⡸⡜⡵⢜⣜⢕⣝⢝⢿⢻⢿⢟⢏⢧⢫⡚⠊⠃⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⡀⠀");
	frame.push_back(L"	⠀⠀⢳⣳⢽⢮⢯⡳⡤⡧⣫⢪⡪⡪⡪⡎⡞⡜⡎⣎⢎⢧⢪⡪⡪⡪⣣⢫⡪⡎⡇⡗⠑⠀⠀⠀⣀⣠⣠⢖⣖⢾⣜⣞⢦⢸⢸⡰⡰");
	frame.push_back(L"	⠀⠀⠈⢞⡽⡵⡯⡯⣫⢯⢾⢜⣎⢳⢣⢳⢕⢇⢏⢎⢮⣪⣪⡪⣎⣇⢧⢣⢇⡷⡽⣲⢶⡲⣯⣻⣺⣺⣪⢟⣞⣗⣗⡽⡣⡫⡪⡺⡨");
	frame.push_back(L"	⠀⠀⠀⠀⠫⢯⢯⢾⢽⢽⢝⣽⡺⣽⡺⣵⣣⢷⣹⣸⣱⣢⣣⣣⡳⡼⡼⣺⡳⡽⣝⣗⢯⢯⢞⣞⢮⡞⠮⠻⠚⠪⠚⠎⠀⠀⠈⠈⠁");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠈⢯⢗⡯⡯⡯⣞⢾⢵⣻⡺⡮⣗⣗⣗⣗⣵⣳⡳⡽⡽⣝⣗⡽⣽⡺⡮⡯⡯⠏⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⢽⢝⣽⡺⡽⡽⡵⣳⢽⣝⣞⣞⢮⣞⢮⣞⢾⢽⣝⣞⢮⢯⣞⢾⢽⢝⡽⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");

	frames.push_back(frame);

	frame = vector<wstring>();

	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢔⢕⢕⡕⡕⡖⡢⡤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢄⢆⢖⢜⢼⢱⢕⢕⡝⡜⣕⢕⡕⡝⣔⡀⡄⡔⡆⡖⡤⡠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣆⢗⢕⡕⣇⢏⢎⡎⡧⡳⡱⡝⣜⡜⡜⣎⢮⢪⢎⢇⢗⢕⢵⢱⢍⢇⢆⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣬⣈⠊⠭⢣⢧⢣⡣⡳⡱⣱⢱⢫⡪⡺⡸⡜⡮⣪⡣⣣⢳⢱⡹⡸⡄⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢆⣰⠟⣿⣵⣧⠀⠀⠁⠓⢝⢜⠞⠘⠈⠑⠑⠙⠜⠼⢸⢢⡣⡳⡱⣣⢣⡣⡣⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢮⡻⢿⢿⣿⡀⠀⠀⠀⠀⠀⢀⠀⣾⣿⣿⠶⣤⠀⠀⠀⠑⠕⡝⡜⣜⢜⢆⠀⠀⠀⠀⢀⠀⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢪⢺⢸⢕⢗⡝⡔⡖⡤⢤⢰⢢⢇⢞⢷⢾⣿⣻⣿⠇⢀⢀⡠⡰⡪⡝⡜⡜⣕⢥⠀⠀⡝⣎⢖⠄");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠳⡱⢵⢱⣍⣇⡗⡇⣗⢕⡳⣹⢪⡣⣣⡣⣣⢫⡪⡣⡣⡣⡇⡧⡳⡹⡸⡸⡢⡄⡇⣇⠯⡅");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢕⢇⡏⡿⣿⣾⣬⢣⢳⢱⢕⢵⡱⢵⢹⡸⢜⡪⡣⡳⡱⡕⣕⢵⢱⢣⡃⢡⣣⣣⢧⠁");
	frame.push_back(L"⢀⢄⢄⢝⢔⢄⡦⣖⢦⣲⢴⣔⣄⣀⡀⡀⠀⠀⠈⢎⢎⢞⢜⣝⡻⡻⡳⡳⡕⡵⡱⡣⣳⢱⢣⡣⡫⡪⡎⡮⡪⡪⡪⡎⡎⢸⡺⡮⡯⡇");
	frame.push_back(L"⠤⢓⢎⢇⢗⢕⢯⣗⣟⢮⣗⣗⢷⣝⢾⢽⢽⢽⢽⢵⡫⣎⠧⡲⡱⡹⡸⡱⡣⡳⡕⣝⢜⡜⣜⢜⢎⢮⢪⢎⢎⢇⢗⢕⢕⢀⡯⡯⡯⡇");
	frame.push_back(L"⠉⠎⠇⠋⠊⠁⠁⢗⡗⡯⠞⡮⡷⡽⡽⡵⡯⣳⢯⣳⣻⣪⢝⢮⢪⡣⡫⣪⢺⢸⢪⢪⡪⣪⢪⡪⡺⡸⡜⡎⡇⡏⡎⡇⡇⡰⡯⡯⣞⠇");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣨⢯⢯⣳⣻⡺⣺⣪⣗⡧⣇⡏⡞⡎⡮⡺⣸⢱⢱⡱⡱⣱⢹⢸⡸⡜⡜⡎⣎⢇⣞⣞⡽⣝⣞⠁");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢽⣝⣗⣗⢷⢝⣗⣗⢗⡽⣳⢽⡺⡮⡮⣺⡸⡪⡣⡳⡹⡜⣜⢕⠵⡕⡽⣸⢮⣻⡺⣺⣺⡳⡃⠀");
	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⢵⣳⢵⡳⡯⣻⣺⣪⢯⢯⡳⣯⣫⢯⢯⣳⢽⢽⣝⢾⢵⣳⣳⡳⣽⡺⣽⡺⣳⡳⣝⣗⣗⡝⠀⠀");

	frames.push_back(frame);

	frame = vector<wstring>();

	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢤⢰⢰⢢⢢⠤⢤⣀⡀⠀⠀⠀⠀⡀⣀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢀⢇⢇⢗⢕⡕⡇⡯⡱⡢⡳⡱⡄⡖⡝⣜⢜⡜⡕⡇⡦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⡪⡣⡫⡪⡫⡪⡳⡱⢵⢵⢱⡹⣸⢱⢹⡸⡜⣜⢜⡜⡜⡎⡮⣚⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠯⠝⠜⢎⢗⢝⢼⡱⡹⡸⡱⡱⡱⡝⣜⢭⢓⢝⡜⡜⡎⡞⡼⣱⡱⡱⣕⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣶⡶⡄⠈⠁⠣⠫⡎⡧⡋⠁⠉⣈⣈⠉⠁⠁⠉⠚⠜⡎⡖⣕⢕⢵⣀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⡰⣯⣹⣿⣿⡂⠀⠀⠀⠀⠀⠂⠀⣾⢿⣿⣛⣵⡆⠀⠀⠀⡠⡝⣜⢼⢸⢢⢣⠀⠀⠀⠀⢐⢮⢲");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣘⠼⡍⡯⣻⢫⢤⢠⢠⢄⢖⢜⡎⡟⡾⢿⠯⡿⡇⡖⣢⢫⡪⡎⣎⢎⢮⢪⢣⡃⠀⢰⢠⢸⢸⢱");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠪⢝⣪⡣⣣⢳⢓⢵⢱⢵⡱⡕⡇⡯⡪⡇⣏⠮⡮⢮⢪⡪⣪⢪⡪⡪⡎⣎⢧⢹⠀⠀⠈⣎⡮⣪");
	frame.push_back(L"	⠀⠀⠀⢄⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠑⡳⢭⢻⣻⣷⣧⣎⡇⡗⡝⡎⡞⡜⡕⣇⢧⢣⡣⣣⢣⡣⡳⡱⣱⢱⡱⠅⠀⠈⡾⣝⣗");
	frame.push_back(L"	⢨⡙⣕⢵⢱⢲⢽⣝⣞⢶⣲⢤⢄⡀⠀⠀⠀⠈⢎⢧⢲⢭⢻⡹⣻⢫⡳⡱⡝⡪⣣⢣⡣⣣⢣⡣⣣⢣⢳⢹⢸⢸⢸⠅⠀⠀⡯⣗⣗");
	frame.push_back(L"	⢢⢲⢕⢕⠵⠍⢷⡳⣝⣗⡽⡽⣝⢾⣝⣖⢦⡤⣤⢵⢕⡕⣕⢕⡕⣕⢕⢝⡜⡝⡜⣜⢜⡜⣜⢜⡜⡜⡎⡮⡪⡣⡳⡁⠀⣨⢯⣳⢽");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠘⠝⠕⠗⠽⢽⣺⣳⡳⣝⢷⣝⣗⢯⣗⣝⢜⢼⣸⡸⡜⡕⣕⢕⢝⢜⢜⡜⣜⢜⢜⢎⢞⢜⢎⢇⠗⢀⣼⡺⣝⣮⡻");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠽⡽⡵⣳⡳⣯⣺⡺⣽⣪⢦⣣⢫⢕⢕⡳⡹⡪⡣⢧⢧⢳⢝⢜⢎⢞⣺⡺⡼⣽⣪⢯⣳⣳⠃");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣔⡯⡯⣳⢽⡺⡮⣻⣺⣪⢟⡮⡯⣗⣗⣗⣗⢧⢯⢮⡺⡮⣞⡵⣯⣳⣳⢽⢽⡺⡮⣻⣺⠊⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡹⡽⣝⣗⢯⢯⣳⣳⣳⣫⢯⢯⢞⣞⣞⢮⢯⢯⣳⢯⡻⡮⡯⣞⣞⢮⢯⡳⡯⣯⡳⠁⠀⠀");

	frames.push_back(frame);

	frame = vector<wstring>();

	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀  ⠀⠀⢀⢀⡠⡠⡄⡤⡠⣀⢀⠀⠀⠀⣀⠤⠤⢤⢠⢄⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡰⡱⡕⣕⢵⢱⢕⢕⡕⡵⣱⢢⢣⡣⡫⡝⡜⡕⣕⢕⡕⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢤⢲⢱⢣⡣⡧⢧⢣⢳⡱⡱⣕⢵⢱⢕⣕⢵⣱⡹⡸⡜⣜⢜⡜⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡰⡕⡵⡱⣣⣣⢣⢳⢱⡹⡸⡸⡱⡕⣕⢕⢇⢇⢗⢜⢜⢭⢺⢸⢜⢜⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠁⢁⣑⣉⠒⠑⠭⢣⡳⡕⣝⠊⠁⢁⣄⣅⣀⡀⠀⠀⠁⠑⢃⢧⢣⢳⢱⢕⠄⠀⠀⠀⠀⠀⠠⢤⢢");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⡿⢿⣷⣷⡀⠀⠀⠀⠈⠀⠁⢀⣿⢿⣿⣥⣿⡆⢀⢠⢰⢱⡱⡹⡸⡱⡱⡹⡀⠀⠀⢠⢀⢸⢸⢕");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠪⡟⡾⡿⡿⣧⢀⡀⣀⡀⡔⣎⢖⡻⣛⢟⢞⢏⢗⢕⢕⢇⢧⢣⢫⢪⢣⢫⡪⡣⡀⠀⠀⠑⡕⣕⢕");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢫⠮⢮⢺⠼⠼⠼⡜⡜⣎⢎⢞⢜⣕⢕⢇⢗⡳⡹⡸⡱⡱⡕⡝⡜⣕⢕⡕⣕⠆⠀⠀⠸⣝⣗⣟");
	frame.push_back(L"	⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠹⠱⡳⡹⡝⡿⣾⣮⣮⣪⡣⣓⢎⢎⢧⢳⢹⢜⢎⢇⢗⢕⢝⡜⣜⢜⡜⣜⢬⠀⠀⠨⣞⣞⢞");
	frame.push_back(L"	⠐⡔⢔⡜⡕⡤⣦⡲⣔⡤⡤⣀⠀⠀⠀⠀⠀⢓⢝⠮⢭⣛⣛⢟⣫⢫⢝⢭⡪⡮⡺⡸⡜⡎⡎⣇⢧⢣⡣⣣⢣⡣⡣⠀⠀⣜⣗⣗⢯");
	frame.push_back(L"	⠸⣌⢗⢕⢵⢹⢮⢯⣳⣫⢯⢗⡯⣗⢦⣢⢄⣠⡨⣪⡳⡸⡸⡸⡸⡸⡱⣱⢱⡱⡱⡕⣕⢵⢹⢸⢸⡸⡸⣸⢸⡸⢂⣠⣞⡗⣗⣗⠏");
	frame.push_back(L"	⠈⠈⠈⠁⠀⠀⠹⢵⢳⢽⢽⢝⣽⡺⣽⡺⣽⣺⣺⣳⡳⣝⢎⢧⢫⣪⣣⡣⣣⢣⢳⢱⡱⡱⡕⡇⣧⢣⡫⢮⢪⣞⣞⣞⢞⣞⣵⡳⠁");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠈⠫⢞⣽⣺⣪⢞⣞⣞⡽⣵⣳⢵⣲⣱⣱⣱⡹⡸⡱⡹⣸⣱⢕⡵⡵⡵⡯⡯⣞⣞⢮⣻⣺⡺⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⣳⣳⡻⣺⣺⡺⣵⣳⣻⡺⣺⣺⡺⣺⢽⢽⣝⣗⡽⣝⢾⢽⢽⢝⡾⡵⣳⣻⡺⠊⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡯⣗⢷⢝⣗⣗⡽⣺⢮⢞⣞⣗⣗⡽⣳⣫⣗⢷⢵⣫⢯⢯⣫⢗⡯⡯⣫⣗⡗⠁⠀⠀⠀⠀");

	frames.push_back(frame);

	frame = vector<wstring>();

	frame.push_back(L"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀    ⠀⠀⡀⡤⡠⡤⢤⢠⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⢤⢲⢰⢪⢪⡣⣓⢆⡆⡤⡪⡪⡎⡮⡪⡺⡸⡪⡲⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⢲⢱⡱⡕⡇⡧⡣⣣⢣⡫⡪⣪⢣⡣⣇⢗⡝⣜⢜⢎⢧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⣆⢗⢝⢜⡜⡜⡎⣎⢇⢧⢳⡱⡹⡱⣱⢱⢕⡕⡵⡱⡹⣸⢸⢥⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⡀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢼⢜⢼⢸⢜⢵⢱⡹⡸⡜⣜⠎⠃⢃⣉⣈⢀⠀⠀⠀⠉⢈⢕⢇⢇⢗⢜⡲⡀⠀⠀⠀⠀⠀⠀⠠⣳⢱");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠁⢁⣥⣅⡁⠁⠑⠙⠘⠑⠃⠀⢠⣿⣿⣯⣽⣷⠀⣀⢔⢕⡕⡇⡗⡕⡇⡇⣗⡀⠀⠀⠀⠈⠣⡪⣪⢪");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⣿⢻⣾⣿⡄⠀⠀⠀⠀⣀⢕⢬⠷⡞⡟⣞⢫⢝⢜⡜⡕⣕⢕⢝⢜⢎⢇⢧⢲⠀⠀⠀⠀⠠⣗⣵⣣");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠩⢫⡻⡻⡻⡻⡢⣒⢖⢜⡜⡜⡎⡧⣳⢹⢸⢜⡎⣇⢧⢳⢱⡱⡹⡸⡪⡪⡎⣎⠆⠀⠀⠀⠨⣳⣳⡳");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⡞⡎⡗⣝⢜⣕⣭⣇⡏⡞⡎⡞⡜⡎⡇⡧⡣⡇⣇⢧⢣⡣⡫⡪⡎⡇⣇⢇⢏⠀⠀⠀⡸⣵⡳⣽");
	frame.push_back(L"	⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠊⠚⠜⡮⡹⡹⡻⡿⢿⢟⢟⢎⢏⢞⢼⢸⡱⡱⡱⣱⢱⢹⡸⡜⡎⣎⢎⠇⠀⢀⣴⣫⢾⢝⡎");
	frame.push_back(L"	⠠⡲⡰⡩⡣⣔⣗⣞⣖⣖⣖⡤⣀⡀⡀⠀⠀⠑⠝⡜⣕⢭⢣⢳⢱⡹⡸⡱⡕⡵⡱⡹⡸⡜⡜⡕⡎⣎⢮⡪⡮⡥⡮⣻⣪⢾⢽⢝⠀");
	frame.push_back(L"	⡡⢥⡫⡺⡸⡜⣞⡮⣞⣞⢮⢯⡳⡯⡯⣳⢶⡲⣧⣻⢜⡎⡮⡎⣇⣇⣏⣎⢮⡪⡎⡧⡳⡱⡝⣜⢮⢪⣣⢾⢝⡽⡽⡵⣫⣗⢯⠁⠀");
	frame.push_back(L"	⠈⠈⠈⠈⠀⠀⠘⠞⠱⠋⠯⠳⢯⢯⢯⡳⡯⡯⣞⡮⣯⣻⣺⣪⢶⢕⣆⣇⣇⣇⢧⣣⢧⣗⡽⣺⡺⣽⡺⡽⡽⣝⡽⡽⡵⡓⠁⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⠫⡯⡯⣞⡽⣺⣪⣞⢮⢯⣳⣳⣳⡳⡽⣝⢾⢵⣳⣫⢗⣟⣞⣞⡽⣝⡮⡯⡞⠁⠀⠀⠀⠀");
	frame.push_back(L"	⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢽⣝⡮⣯⣳⣳⡳⡯⣻⣺⣺⣪⢯⣻⡺⣝⣗⢷⢽⢝⣞⢮⣞⣞⢷⢽⢝⠀⠀⠀⠀⠀⠀");

	frames.push_back(frame);
}

GameOverLevel::~GameOverLevel()
{
	for (auto* item : menuItems)
	{
		if (item)
		{
			delete item;
			item = nullptr;
		}
	}

	if (timer)
	{
		delete timer;
		timer = nullptr;
	}
	if (animTimer)
	{
		delete animTimer;
		animTimer = nullptr;
	}
}

void GameOverLevel::Update(float deltaTime)
{
	timer->Update(deltaTime);
	animTimer->Update(deltaTime);

	if (Game::Get().GetKeyDown(VK_LEFT))
	{
		currentIndex = (currentIndex - 1 + length) % length;
	}
	if (Game::Get().GetKeyDown(VK_RIGHT))
	{
		currentIndex = (currentIndex + 1) % length;
	}

	if (Game::Get().GetKeyDown(VK_RETURN))
	{
		menuItems[currentIndex]->onSelected();
		timer->Reset();
		bOnce = false;
	}
}

void GameOverLevel::Draw()
{
	if (timer->IsTimeOut())
	{
		animTimer->bActive = true;
		if (!bOnce)
		{
			bOnce = true;
			system("cls");
		}

		SetConsoleOutputCP(949);

		Engine::Get().SetCursorPosition(0, 0);

		SetColor(Color::Red);

		cout << "\t\t게임을 다시 하시겠습니까?\n\n\t";

		SetColor(unselectedColor);

		for (int ix = 0; ix < length; ++ix)
		{
			SetColor(ix == currentIndex ? selectedColor : unselectedColor);
			cout << "\t" << menuItems[ix]->menuText << "\t";
		}

		cout << "\n";

		SetConsoleOutputCP(CP_UTF8);


		SetColor(Color::White);

		if (animTimer->IsTimeOut())
		{
			animTimer->Reset();
			Engine::Get().ClearTargetScreen(0, 3);
			for (auto& line : frames[idx])
			{
				wcout << line << "\n";
			}
			idx++;
			if (idx >= (int)frames.size()) idx = 0;
		}
	}
}
